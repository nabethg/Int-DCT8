#include "Vint_dct8.h" // generated by Verilator
#include "agent.h"
#include "reference.h"
#include "test.h"
#include "verilated.h"
#include <cstdlib>
#include <ctime>
#include <iostream>

void inline static print_scoreboard(const Scoreboard &sb)
{
  std::cout << "Tests run: " << sb.getTotal() << ", "
            << "Passed: " << sb.getPassed() << ", "
            << "Failed: " << sb.getFailed() << ".\n";
}

int main(int argc, char **argv)
{
  Verilated::commandArgs(argc, argv);
  Vint_dct8 *top = new Vint_dct8;

  std::srand(static_cast<unsigned>(std::time(nullptr)));

  // DUT interface
  Agent agent(top);
  agent.reset();

  // Testbench
  Test test(&agent, ref_dct_slow);

  std::cout << "=== Running Custom Tests ===\n";
  test.run_custom_tests();
  print_scoreboard(test.getScoreboard());
  test.resetScoreboard();

  std::cout << "=== Running Random Tests ===\n";
  test.run_random_tests(10'000'000);
  print_scoreboard(test.getScoreboard());

  // top->final();
  delete top;
  return 0;
}
